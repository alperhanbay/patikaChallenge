<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find mir_gazebo)/launch/mir_maze_world.launch"/>

  
  <node pkg="rosservice" type="rosservice" name="servis" args="call --wait gazebo/unpause_physics" />
 
   <include file="$(find mir_navigation)/launch/amcl.launch">
      <arg name="initial_pose_x" value="10"/>
      <arg name="initial_pose_y" value="10"/> 
  </include>
  
  <include file="$(find mir_navigation)/launch/start_planner.launch">
    <!-- <arg name="gui" value="$(arg gui)" />-->
  </include>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find mir_navigation)/rviz/navigation.rviz" />
  
  <node pkg="mir_mission" type="mission" name="simple_navigation_goals"/>


</launch>

 




 <!--source ~/catkin_ws/devel/setup.bash

roslaunch mir_gazebo mir_maze_world.launch

rosservice call /gazebo/unpause_physics 

roslaunch mir_navigation amcl.launch initial_pose_x:=10.0 initial_pose_y:=10.0

roslaunch mir_navigation start_planner.launch \
    map_file:=$(rospack find mir_gazebo)/maps/maze.yaml \
    virtual_walls_map_file:=$(rospack find mir_gazebo)/maps/maze_virtual_walls.yaml
rviz -d $(rospack find mir_navigation)/rviz/navigation.rviz

rosrun rviz rviz /navigation.rviz


rosrun mir_mission mission -->